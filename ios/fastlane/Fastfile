default_platform(:ios)

platform :ios do
  desc "Build Flutter app for iOS"
  lane :build do
    Dir.chdir("..") do
      sh("flutter", "clean")
      sh("flutter", "pub", "get")
      sh("flutter", "build", "ios", "--release", "--no-codesign")
    end
    
    sh("bundle", "exec", "pod", "install")
    
    increment_build_number(xcodeproj: "Runner.xcodeproj")
    build_app(
      workspace: "Runner.xcworkspace", 
      scheme: "Runner",
      configuration: "Release",
      export_method: "app-store"
    )
  end

  desc "Upload to TestFlight"
  lane :beta do
    build
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      distribute_external: false,
      changelog: File.read("metadata/ko/release_notes.txt"),
      api_key_path: ENV["APP_STORE_CONNECT_API_KEY_PATH"]
    )
  end

  desc "Upload existing IPA to TestFlight"
  lane :upload do
    # Read App Store Connect credentials
    config = {}
    File.read("../../.app_store_config").strip.split("\n").each do |line|
      key, value = line.split("=", 2)
      config[key] = value
    end
    
    # Set environment variable for fastlane
    ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = config["password"]
    
    upload_to_testflight(
      ipa: "Runner.ipa",
      skip_waiting_for_build_processing: true,
      distribute_external: false,
      changelog: File.read("metadata/ko/release_notes.txt"),
      app_identifier: config["app_identifier"],
      username: config["username"]
    )
  end

  desc "Push to App Store"
  lane :release do
    build
    upload_to_app_store(
      force: true,
      submit_for_review: false,
      automatic_release: false,
      skip_metadata: false,
      skip_screenshots: false,
      api_key_path: ENV["APP_STORE_CONNECT_API_KEY_PATH"]
    )
  end
end
